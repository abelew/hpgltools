% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ontology_clusterprofiler.r
\name{cluster_trees}
\alias{cluster_trees}
\title{\code{cluster_trees()}  Take clusterprofile group data and print it on a tree as topGO does
Make fun trees a la topgo from goseq data.}
\usage{
cluster_trees(de_genes, cpdata, goid_map = "reference/go/id2go.map",
  goids_df = NULL, score_limit = 0.2, overwrite = FALSE,
  selector = "topDiffGenes", pval_column = "adj.P.Val")
}
\arguments{
\item{de_genes}{A list of genes deemed 'interesting'}

\item{cpdata}{data from simple_clusterprofiler()}

\item{goid_map}{default='reference/go/id2go.map'  A mapping file of IDs to GO ontologies}

\item{goids_df}{default=NULL  A dataframe of mappings used to build goid_map}

\item{score_limit}{default=0.2  A scoring limit above which to ignore genes}

\item{overwrite}{default=FALSE  Overwrite an existing goid mapping file?}

\item{selector}{default='topDiffGenes'  The name of a function for applying scores to the trees}

\item{pval_column}{default='adj.P.Val'  The name of the column in the table from which to extract scores}
}
\value{
plots! Trees! oh my!
}
\description{
\code{cluster_trees()}  Take clusterprofile group data and print it on a tree as topGO does
Make fun trees a la topgo from goseq data.
}
\examples{
\dontrun{
cluster_data <- simple_clusterprofiler(genes, stuff)
ctrees <- cluster_trees(genes, cluster_data)
}
}
\seealso{
\pkg{Ramigo} \code{\link[topGO]{showSigOfNodes}}
}

