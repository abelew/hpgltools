% Generated by roxygen2 (4.0.1): do not edit by hand
\name{my_norm}
\alias{my_norm}
\title{Normalize a dataframe/expt, express it, and/or transform it}
\usage{
my_norm(df = NULL, expt = NULL, design = NULL, out_type = "raw",
  norm_type = "raw", filter = "raw", filter_low = TRUE)
}
\arguments{
\item{expt=expt}{an expt class containing all the necessary
metadata}

\item{df=df}{alternately a dataframe of counts may be used}

\item{design=design}{but a design dataframe must come with it}

\item{out_type}{defines the output type which may be raw, cpm,
or rpkm.  Defaults to raw.}

\item{filter}{defines whether to log(2|10) transform the
data. Defaults to raw.}

\item{norm_type}{specify the normalization strategy.  Defaults to
raw.  This makes use of DESeq/EdgeR/cbcbSEQ to provide: quantile,
RLE, upperquartile, size-factor, or tmm normalization.  I tend to
like quantile, but there are definitely corner-case scenarios for
all strategies.}

\item{filter_low}{choose whether to low-count filter the data.
Defaults to true.}
}
\value{
edgeR's DGEList expression of a count table.  This seems to
me to be the easiest to deal with.
}
\description{
Normalize a dataframe/expt, express it, and/or transform it
}
\examples{
## df_raw = my_norm(expt=expt)  ## Only performs low-count filtering
## df_raw = my_norm(df=a_df, design=a_design) ## Same, but using a df
## df_ql2rpkm = my_norm(expt=expt, norm_type='quant', filter='log2', out_type='rpkm')  ## Quantile, log2, rpkm
## count_table = df_ql2rpkm$counts
## library_size = df_ql2rpkm$lib.size
}
\seealso{
\code{\link{cpm}}, \code{\link{rpkm}},
\code{\link{my_rpkm}}, \code{\link{filterCounts}},
\code{\link{DESeqDataSetFromMatrix}},
\code{\link{estimateSizeFactors}}, \code{\link{DGEList}},
\code{\link{qNorm}}, \code{\link{calcNormFactors}}
}

