% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotation_orgdb.R
\name{map_orgdb_ids}
\alias{map_orgdb_ids}
\title{Map AnnotationDbi keys from one column to another.}
\usage{
map_orgdb_ids(orgdb, gene_ids = NULL, mapto = "ensembl", keytype = "geneid")
}
\arguments{
\item{orgdb}{OrganismDb instance.}

\item{gene_ids}{Gene identifiers for retrieving annotations.}

\item{mapto}{Key to map the IDs against.}

\item{keytype}{Choose a keytype, this will yell if it doesn't like your choice.}
}
\value{
a table of gene information
}
\description{
Given a couple of keytypes, this provides a quick mapping across them.  I
might have an alternate version of this hiding in the gsva code, which
requires ENTREZIDs.  In the mean time, this creates a dataframe of the mapped
columns for a given set of gene ids using the in a sqlite instance.
}
\examples{
hs_annot <- load_orgdb_annotations("org.Hs.eg.db")
dim(hs_annot[["genes"]])

## I changed this fairly significantly to simplify the select statements.
hs_go <- load_orgdb_go("org.Mm.eg.db")
summary(hs_go)

## extract_eupath_orthologs should be moved to EuPathDB

## This is similar to clusterProfiler's bitr I think.
dm_symbols <- map_orgdb_ids("org.Dm.eg.db", keytype = "entrezid", mapto = "symbol")
head(dm_symbols)

## Guess the most appropriate keytype given some IDs
## Essentially: what column has this?
wanted_ids <- c("G9a", "cin", "ewg")
keytype_guess <- guess_orgdb_keytype(ids = wanted_ids, "org.Dm.eg.db")
keytype_guess

## Extract The actual data of interest from AnnotationHub
if (interactive()) {
  wanted <- orgdb_from_ah(type = "OrgDb", title = "Gorilla")
  class(wanted)
}
}
\seealso{
[AnnotationDbi]
}
\author{
Keith Hughitt with changes by atb.
}
