% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc_functions.r
\name{write_xls}
\alias{write_xls}
\title{Write a dataframe to an excel spreadsheet sheet.
I like to give folks data in any format they prefer, even though I sort
of hate excel.  Most people I work with use it, so therefore I do too.
This function has been through many iterations, first using XLConnect,
then xlsx, and now openxlsx.  Hopefully this will not change again.}
\usage{
write_xls(wb, data, sheet = "first", first_two_widths = c("30", "60"),
  start_row = 1, start_col = 1, ...)
}
\arguments{
\item{wb}{the workbook to which to write}

\item{data}{A data frame to print}

\item{sheet}{Name of the sheet to write}

\item{first_two_widths}{I add long titles to the tops of the sheets
setting this makes sure that those columns are not too wide}

\item{start_row}{The first row of the sheet to write}

\item{start_col}{The first column to write}

\item{...}{the set of arguments given to for openxlsx}
}
\value{
a list containing the sheet and workbook written as well as the bottom-right coordinates of the last
  row/column written of the table.
}
\description{
Write a dataframe to an excel spreadsheet sheet.
I like to give folks data in any format they prefer, even though I sort
of hate excel.  Most people I work with use it, so therefore I do too.
This function has been through many iterations, first using XLConnect,
then xlsx, and now openxlsx.  Hopefully this will not change again.
}
\examples{
\dontrun{
 xls_coords <- write_xls(dataframe, sheet="hpgl_data")
 xls_coords <- write_xls(another_df, sheet="hpgl_data", start_row=xls_coords$end_col)
}
}
\seealso{
\pkg{openxlsx} \link[openxlsx]{writeDataTable}
}

