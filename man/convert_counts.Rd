% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalize_convert.r
\name{convert_counts}
\alias{convert_counts}
\title{Perform a cpm/rpkm/whatever transformation of a count table.}
\usage{
convert_counts(data, convert = "raw", annotations = NULL, fasta = NULL,
  pattern = "TA", entry_type = "gene", ...)
}
\arguments{
\item{data}{Matrix of count data.}

\item{convert}{Type of conversion to perform: edgecpm/cpm/rpkm/cp_seq_m.}

\item{annotations}{Set of gff annotations are needed if using rpkm so we can get gene lengths.}

\item{fasta}{Fasta for rpkmish normalization.}

\item{pattern}{Cp_seq_m counts require a pattern to search on.}

\item{entry_type}{Used when reading a gff to acquire gene lengths.}

\item{...}{Options I might pass from other functions are dropped into arglist.}
}
\value{
Dataframe of cpm/rpkm/whatever(counts)
}
\description{
I should probably tell it to also handle a simple df/vector/list of gene lengths, but I
haven't. cp_seq_m is a cpm conversion of the data followed by a rp-ish conversion which
normalizes by the number of the given oligo.  By default this oligo is 'TA' because it was used
for tnseq which should be normalized by the number of possible transposition sites by mariner.
It could, however, be used to normalize by the number of methionines, for example -- if one
wanted to do such a thing.
}
\examples{
\dontrun{
 converted_table = convert_counts(count_table, convert='edgecpm')
}
}
\seealso{
\pkg{edgeR} \pkg{Biobase} \code{\link[edgeR]{cpm}}
}

