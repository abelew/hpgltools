% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalize_batch.R
\name{cbcb_batch}
\alias{cbcb_batch}
\title{A function suggested by Hector Corrada Bravo and Kwame Okrah for batch
removal.}
\usage{
cbcb_batch(
  normalized_counts,
  model,
  conditional_model = NULL,
  batch_model = NULL,
  batch1 = "batch",
  condition = "condition",
  matrix_scale = "linear",
  return_scale = "linear",
  method = "subtract"
)
}
\arguments{
\item{normalized_counts}{Data frame of log2cpm counts.}

\item{model}{Balanced experimental model containing condition and batch
factors.}

\item{conditional_model}{Experimental model with the conditional factor.}

\item{batch_model}{Experimental model with the batch factor.}

\item{batch1}{Column containing the first batch's metadata in the experimental design.}

\item{condition}{Column containing the condition information in the metadata.}

\item{matrix_scale}{Is the data on a linear or log scale?}

\item{return_scale}{Do you want the data returned on the linear or log scale?}

\item{method}{I found a couple ways to apply the surrogates to the data.  One
method subtracts the residuals of a batch model, the other adds the
conditional.}
}
\value{
Dataframe of residuals after subtracting batch from the model.
}
\description{
During a lab meeting, the following function was suggested as a quick and
dirty batch removal tool.  It takes data and a model including a 'batch'
factor, invokes limma on them, removes the batch factor, does a cross
product of the fitted data and modified model and uses that with residuals to
get a new data set.
}
\examples{
\dontrun{
 newdata <- cbcb_batch_effect(counts, expt_model)
}
}
\seealso{
[limma::voom()] [limma::lmFit()]
}
