% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/de_shared.R
\name{all_pairwise}
\alias{all_pairwise}
\title{Perform limma, DESeq2, EdgeR, basic, noiseq, dream, and ebseq
pairwise analyses.}
\usage{
all_pairwise(
  input = NULL,
  model_fstring = "~ 0 + condition + batch",
  null_fstring = "~",
  model_svs = NULL,
  modify_p = FALSE,
  filter = NULL,
  extra_contrasts = NULL,
  libsize = NULL,
  test_pca = TRUE,
  annot_df = NULL,
  includes = NULL,
  keepers = NULL,
  convert = "cpm",
  norm = "quant",
  verbose = TRUE,
  num_surrogates = "be",
  methods = NULL,
  keep_underscore = TRUE,
  dream_model = NULL,
  force = FALSE,
  ...
)
}
\arguments{
\item{input}{Input data structure with count data, annotations, and
metadata.}

\item{model_fstring}{Formula string describing the statistical
model of interest.}

\item{null_fstring}{Formula string describing the null hypothesis.}

\item{model_svs}{Surrogate variable(s) to add to the model; this is
commonly a character describing the method used to extract them (sva).}

\item{modify_p}{Depending on how it is used, sva may require a modification
of the p-values.}

\item{filter}{Added because I am tired of needing to filter the data before
invoking all_pairwise().}

\item{extra_contrasts}{Optional extra contrasts beyone the pairwise
comparisons.  This can be pretty neat, lets say one has conditions
A,B,C,D,E and wants to do (C/B)/A and (E/D)/A or (E/D)/(C/B) then use this
with a string like:
 "c_vs_b_ctrla = (C-B)-A, e_vs_d_ctrla = (E-D)-A, de_vs_cb = (E-D)-(C-B)".}

\item{libsize}{Library size of the original data to help voom().}

\item{test_pca}{Perform some tests of the data before/after applying a given
batch effect.}

\item{annot_df}{Annotations to add to the result tables.}

\item{keepers}{Limit the pairwise search to a set of specific contrasts.}

\item{convert}{Modify the data with a 'conversion' method for PCA?}

\item{norm}{Modify the data with a 'normalization' method for PCA?}

\item{verbose}{Print extra information while running?}

\item{num_surrogates}{Either a number of surrogates or method to
estimate it.}

\item{methods}{I want to replace the various do_x arguments with
this.}

\item{keep_underscore}{Do not sanitize underscores from the model.}

\item{dream_model}{Dream models are a superset of everything else,
so one may provide them here.}

\item{force}{Force the input data into the methods even if it is
expected to violate their assumptions/rules (e.g. integers for DESeq)}

\item{...}{Picks up extra arguments into arglist.}

\item{do_basic}{Perform a basic analysis?}

\item{do_deseq}{Perform DESeq2 pairwise?}

\item{do_ebseq}{Perform EBSeq (caveat, this is NULL as opposed to TRUE/FALSE
so it can choose).}

\item{do_edger}{Perform EdgeR?}

\item{do_limma}{Perform limma?}

\item{do_noiseq}{Perform noiseq?}

\item{do_dream}{Perform dream?}
}
\value{
A list of limma, deseq, edger results.
}
\description{
This takes an expt object, collects the set of all possible pairwise
comparisons, sets up experimental models appropriate for the differential
expression analyses, and performs them.
}
\details{
This runs the various x_pairwise() functions each in turn. It
collects the results and does some simple comparisons among them.
}
\examples{
\dontrun{
 lotsodata <- all_pairwise(input = expt)
 summary(lotsodata)
 ## limma, edger, deseq, basic results; plots; and summaries.
}
}
\seealso{
[limma_pairwise()] [edger_pairwise()] [deseq_pairwise()] [ebseq_pairwise()]
 [basic_pairwise()]
}
