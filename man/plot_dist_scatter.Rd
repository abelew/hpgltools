% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_point.R
\name{plot_dist_scatter}
\alias{plot_dist_scatter}
\title{Make a scatter plot between two sets of numbers with a cheesy distance metric
and some statistics of the two sets.}
\usage{
plot_dist_scatter(df, size = 2, xlab = NULL, ylab = NULL)
}
\arguments{
\item{df}{Dataframe likely containing two columns.}

\item{size}{Size of the dots.}

\item{xlab}{x-axis label.}

\item{ylab}{y-axis label.}
}
\value{
Ggplot2 scatter plot.  This plot provides a "bird's eye"
 view of two data sets.  This plot assumes the two data structures
 are not correlated, and so it calculates the median/mad of each
 axis and uses these to calculate a stupid, home-grown distance
 metric away from both medians.  This distance metric is used to
 color dots which are presumed the therefore be interesting because
 they are far from 'normal.'  This will make a fun clicky googleVis
 graph if requested.
}
\description{
The distance metric should be codified and made more intelligent.
Currently it creates a dataframe of distances which are absolute
distances from each axis, multiplied by each other, summed by axis,
then normalized against the maximum.
}
\examples{
if (is.null(pombe_se)) {
  source(system.file("examples", "create_pombe.R", package = "hpgltools"))
}

## Biological Coefficient of variation plots are most helpful for raw data.
bcv <- plot_bcv(pombe_se)
bcv[["plot"]]

if (is.null(pombe_norm)) {
  source(system.file("examples", "normalize_pombe.R", package = "hpgltools"))
}

## Since I have the data loaded, I will plot two samples
## of my pombe data against each other...
test_df <- as.data.frame(assay(pombe_norm[, c(1, 2)]))

test_scatter <- plot_dist_scatter(test_df)
test_scatter

boring_scatter <- plot_scatter(test_df)
boring_scatter

test_scatter <- plot_linear_scatter(test_df)
summary(test_scatter)
test_scatter[["scatter"]]
## Hey, check it, they are very similar.

## See how many nonzero genes there are per sample vs. coverage
nonzero <- plot_nonzero(pombe_se)
nonzero

## MA samples against each other
## In this case I am just comparing the first two samples
## If I did not do this subset, it would do all pairwise comparisons.
sample_ma <- plot_pairwise_ma(pombe_se[, c(1, 2)])
sample_ma
}
\seealso{
[ggplot2::geom_point()] [plot_linear_scatter()]
}
