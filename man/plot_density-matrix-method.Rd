% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_distribution.R
\name{plot_density,matrix-method}
\alias{plot_density,matrix-method}
\title{Create a density plot, showing the distribution of each column of data.}
\usage{
\S4method{plot_density}{matrix}(
  data,
  colors = NULL,
  colors_by = "condition",
  design = NULL,
  direct = NULL,
  fill = NULL,
  label_chars = 10,
  plot_title = NULL,
  position = "identity",
  sample_names = NULL,
  scale = NULL,
  ...
)
}
\arguments{
\item{data}{Expt, expressionset, or data frame.}

\item{colors}{Color scheme to use.}

\item{colors_by}{Factor for coloring the lines.}

\item{design}{Experimental design.}

\item{direct}{Use direct.labels for labeling the plot?}

\item{fill}{Fill the distributions?  This might make the plot unreasonably colorful.}

\item{label_chars}{Maximum number of characters in sample names before abbreviation.}

\item{plot_title}{Title for the plot.}

\item{position}{How to place the lines, either let them overlap (identity), or stack them.}

\item{sample_names}{Names of the samples.}

\item{scale}{Plot on the log scale?}

\item{...}{sometimes extra arguments might come from graph_metrics()}
}
\value{
ggplot2 density plot!
}
\description{
Density plots and boxplots are cousins and provide very similar views of data
distributions. Some people like one, some the other.  I think they are both
colorful and fun!
}
\examples{
if (is.null(pombe_se)) {
  source(system.file("examples", "create_se.R", package = "hpgltools"))
}

## Most distribution plots are particularly informative with the raw data.

## Make a boxplot of the SE
a_boxplot <- plot_boxplot(pombe_se)
a_boxplot

## The analagous density plot of the samples
a_density <- plot_density(pombe_se)
a_density

pombe_subset <- pombe_se[, c(1, 2, 3, 4)]
## QQ plots comparing samples to each other
qq <- plot_qq_all(pombe_subset)
qq[["logs"]]

## Show the percentage of all reads comprised by the top-n genes.
## This might be smarter if moved to the log scale?
topn_genes <- plot_topn(pombe_subset)
topn_genes

## Create a violin of the coefficient of variance on a per-condition basis.
varcoef <- plot_variance_coefficients(pombe_se)
varcoef
}
\seealso{
[ggplot2]
}
