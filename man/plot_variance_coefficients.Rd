% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_distribution.R
\name{plot_variance_coefficients}
\alias{plot_variance_coefficients}
\title{Look at the (biological)coefficient of variation/quartile coefficient of dispersion
with respect to an experimental factor.}
\usage{
plot_variance_coefficients(
  data,
  design = NULL,
  x_axis = "condition",
  colors = NULL,
  plot_title = NULL,
  ...
)
}
\arguments{
\item{data}{Expressionset/epxt to poke at.}

\item{design}{Specify metadata if necessary.}

\item{x_axis}{Factor in the experimental design we may use to group the data
and calculate the dispersion metrics.}

\item{colors}{Set of colors to use when making the violins}

\item{plot_title}{Optional title to include with the plot.}

\item{...}{Extra arguments to pass along.}
}
\value{
List of plots showing the coefficients vs. genes along with the data.
}
\description{
I want to look at the (B)CV of some data with respect to condition/batch/whatever.
This function should make that possible, with some important caveats.  The
most appropriate metric  is actually the biological coefficient of variation
as calculated by DESeq2/EdgeR; but the metrics I am currently taking are the
simpler and less appropriate CV(sd/mean) and QCD(q3-q1/q3+q1).
}
\examples{
if (is.null(pombe_se)) {
  source(system.file("examples", "create_se.R", package = "hpgltools"))
}

## Most distribution plots are particularly informative with the raw data.

## Make a boxplot of the SE
a_boxplot <- plot_boxplot(pombe_se)
a_boxplot

## The analagous density plot of the samples
a_density <- plot_density(pombe_se)
a_density

pombe_subset <- pombe_se[, c(1, 2, 3, 4)]
## QQ plots comparing samples to each other
qq <- plot_qq_all(pombe_subset)
qq[["logs"]]

## Show the percentage of all reads comprised by the top-n genes.
## This might be smarter if moved to the log scale?
topn_genes <- plot_topn(pombe_subset)
topn_genes

## Create a violin of the coefficient of variance on a per-condition basis.
varcoef <- plot_variance_coefficients(pombe_se)
varcoef
}
