% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_tables.r
\name{create_experiment}
\alias{create_experiment}
\title{Wrap bioconductor's expressionset to include some other extraneous
information.}
\usage{
create_experiment(file = NULL, color_hash = NULL, suffix = ".count.gz",
  header = FALSE, gene_info = NULL, by_type = FALSE, by_sample = FALSE,
  include_type = "all", include_gff = NULL, count_dataframe = NULL,
  meta_dataframe = NULL, sep = ",", ...)
}
\arguments{
\item{file}{a comma separated file describing the samples with
information like condition,batch,count_filename,etc.}

\item{color_hash}{a hash which describes how to color the samples}

\item{suffix}{when looking for the count tables in processed_data
look for this suffix on the end of the files.}

\item{header}{Does the csv metadata file have a header?}

\item{gene_info}{annotation information describing the rows of the data set, usually
this comes from a call to import.gff()}

\item{by_type}{when looking for count tables, are they organized by type?}

\item{by_sample}{or by sample?  I do all mine by sample, but others do by type...}

\item{include_type}{I have usually assumed that all gff annotations should be used,
but that is not always true, this allows one to limit.}

\item{include_gff}{A gff file to help in sorting which features to keep}

\item{count_dataframe}{If one does not wish to read the count tables from processed_data/
they may instead be fed here}

\item{meta_dataframe}{an optional dataframe containing the metadata rather than a file}

\item{sep}{some people prefer their csv files as tab or semicolon separated.}

\item{...}{more parameters}
}
\value{
experiment an expressionset
}
\description{
Wrap bioconductor's expressionset to include some other extraneous
information.
}
\examples{
\dontrun{
new_experiment = create_experiment("some_csv_file.csv", color_hash)
}
}
\seealso{
\pkg{Biobase} \link[Biobase]{pData} \link[Biobase]{fData}
\link[Biobase]{exprs} \link{hpgl_read_files} \link[hash]{as.list.hash}
}

